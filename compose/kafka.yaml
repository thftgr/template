version: '3.8'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:28881:38881;zookeeper-2:28882:38882;zookeeper-3:28883:38883
    ports:
      - "22181:2181"
    networks:
      - dev-stack-network

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:28881:38881;zookeeper-2:28882:38882;zookeeper-3:28883:38883
    ports:
      - "32181:2181"
    networks:
      - dev-stack-network

  zookeeper-3:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:28881:38881;zookeeper-2:28882:38882;zookeeper-3:28883:38883
    ports:
      - "42181:2181"
    networks:
      - dev-stack-network

#=======================================================================================================================
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3

    ports:
      - "8088:8080"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8080
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT://kafka-broker-2:9092,PLAINTEXT://kafka-broker-3:9092
      SCHEMA_REGISTRY_DEBUG: 'true'
    networks:
      - dev-stack-network

  kafka-broker-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-1:9092,EXTERNAL://192.168.0.50:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
    networks:
      - dev-stack-network

  kafka-broker-2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-2:9092,EXTERNAL://192.168.0.50:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
    networks:
      - dev-stack-network

  kafka-broker-3:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "49092:49092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-3:9092,EXTERNAL://192.168.0.50:49092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
    networks:
      - dev-stack-network

#=======================================================================================================================
  elasticsearch-1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    environment:
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - node.name=elasticsearch-1
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch-2,elasticsearch-3
      - cluster.initial_master_nodes=elasticsearch-1,elasticsearch-2,elasticsearch-3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - dev-stack-network

  elasticsearch-2:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    environment:
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - node.name=elasticsearch-2
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch-1,elasticsearch-3
      - cluster.initial_master_nodes=elasticsearch-1,elasticsearch-2,elasticsearch-3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - dev-stack-network

  elasticsearch-3:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    environment:
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - node.name=elasticsearch-3
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch-1,elasticsearch-2
      - cluster.initial_master_nodes=elasticsearch-1,elasticsearch-2,elasticsearch-3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - dev-stack-network

#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.elasticsearch-3.rule=Host(`yourdomain.com`) && PathPrefix(`/es`)"
#      - "traefik.http.services.elasticsearch-3.loadbalancer.server.port=9200"
  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.1
    environment:
      - 'ELASTICSEARCH_HOSTS=["http://elasticsearch-1:9200","http://elasticsearch-2:9200","http://elasticsearch-3:9200"]'
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - elasticsearch.ssl.verificationMode=none
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch-1
      - elasticsearch-2
      - elasticsearch-3
    networks:
      - dev-stack-network
#=======================================================================================================================
#  traefik:
#    build:
#      context: .
#      dockerfile_inline: |
#        FROM traefik:latest
#        RUN cat <<EOF > /traefik.yml
#        # Traefik log 설정
#        log:
#          level: WARN
#          format: common
#
#        accessLog:
#          bufferingSize: 1000
#          format: common
#          fields:
#            headers:
#              names:
#                User-Agent: keep
#                Host: keep
#
#        api:
#          insecure: true
#          dashboard: true
#
#        providers:
#          docker:
#            exposedByDefault: false
#
#        entryPoints:
#          http:
#            address: ":80"
#        EOF
#    command:
#      - "--configFile=/traefik.yml"
#    networks:
#      - dev-stack-network
#    ports:
#      - "80:80"
#      - "8080:8080"

#=======================================================================================================================
#=======================================================================================================================
networks:
  dev-stack-network:
    ipam:
      driver: default
      config:
        - subnet: 10.2.0.0/24
          ip_range: 10.2.0.0/24
          gateway: 10.2.0.1
